'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DatetimeField = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _reactDatetime = require('react-datetime');

var _reactDatetime2 = _interopRequireDefault(_reactDatetime);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import _ from 'underscore';
// import TextField from 'material-ui/TextField';


// import 'react-datetime/css/react-datetime.css';

var propTypes = {};

var defaultProps = {};

var DateTimeFieldComponent = function (_React$Component) {
  _inherits(DateTimeFieldComponent, _React$Component);

  function DateTimeFieldComponent(props) {
    _classCallCheck(this, DateTimeFieldComponent);

    var _this = _possibleConstructorReturn(this, (DateTimeFieldComponent.__proto__ || Object.getPrototypeOf(DateTimeFieldComponent)).call(this, props));

    _this.state = { value: props.value };
    return _this;
  }

  _createClass(DateTimeFieldComponent, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({ value: nextProps.value });
    }
  }, {
    key: 'onChange',
    value: function onChange(date) {
      if (date) {
        this.setState({ value: date.toDate() });
        this.props.onChange(date.toDate());
        return;
      }

      this.setState({ value: null });
      this.props.onChange(null);
      return null;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactBootstrap.FormGroup,
        {
          validationState: this.props.errorMessage ? 'error' : undefined
        },
        this.props.label ? _react2.default.createElement(
          _reactBootstrap.ControlLabel,
          null,
          this.props.label
        ) : null,
        _react2.default.createElement(_reactDatetime2.default, _extends({
          ref: 'input',
          dateTime: this.state.value,
          onChange: this.onChange.bind(this),
          onBlur: function onBlur() {
            return _this2.props.onChange(_this2.state.value);
          },
          value: this.state.value,
          inputProps: {
            placeholder: this.props.placeholder || this.props.passProps.placeholder
          }
        }, this.props.passProps)),
        this.props.errorMessage && _react2.default.createElement(
          _reactBootstrap.HelpBlock,
          null,
          this.props.errorMessage
        )
      );
    }
  }]);

  return DateTimeFieldComponent;
}(_react2.default.Component);

DateTimeFieldComponent.propTypes = propTypes;
DateTimeFieldComponent.defaultProps = defaultProps;

exports.DatetimeField = DateTimeFieldComponent;