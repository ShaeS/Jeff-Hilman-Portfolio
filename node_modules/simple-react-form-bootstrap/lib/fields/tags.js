'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TagsField = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

var _reactTagsinput = require('react-tagsinput');

var _reactTagsinput2 = _interopRequireDefault(_reactTagsinput);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import TextField from 'material-ui/TextField';


// import 'react-tagsinput/react-tagsinput.css';

var propTypes = {};

var defaultProps = {};

var TagsFieldComponent = function (_React$Component) {
  _inherits(TagsFieldComponent, _React$Component);

  function TagsFieldComponent(props) {
    _classCallCheck(this, TagsFieldComponent);

    var _this = _possibleConstructorReturn(this, (TagsFieldComponent.__proto__ || Object.getPrototypeOf(TagsFieldComponent)).call(this, props));

    _this.type = props.type || 'text';
    _this.state = { value: props.value || [] };
    return _this;
  }

  _createClass(TagsFieldComponent, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({ value: nextProps.value });
    }
  }, {
    key: 'onChange',
    value: function onChange(tags) {
      this.setState({ value: tags });
      this.props.onChange(tags);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactBootstrap.FormGroup,
        {
          validationState: this.props.errorMessage ? 'error' : undefined
        },
        this.props.label ? _react2.default.createElement(
          _reactBootstrap.ControlLabel,
          null,
          this.props.label
        ) : null,
        _react2.default.createElement(_reactTagsinput2.default, _extends({
          ref: 'input',
          value: this.state.value,
          onChange: this.onChange.bind(this)
        }, this.props.passProps)),
        this.props.errorMessage && _react2.default.createElement(
          _reactBootstrap.HelpBlock,
          null,
          this.props.errorMessage
        )
      );
    }
  }]);

  return TagsFieldComponent;
}(_react2.default.Component);

TagsFieldComponent.propTypes = propTypes;
TagsFieldComponent.defaultProps = defaultProps;

exports.TagsField = TagsFieldComponent;