'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorField = exports.PasswordField = exports.EmailField = exports.DateField = exports.NumberField = exports.TextareaField = exports.TextField = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require('react-bootstrap');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import TextField from 'material-ui/TextField';


var propTypes = {
  changeOnKeyDown: _react2.default.PropTypes.bool,
  fieldType: _react2.default.PropTypes.string,
  passProps: _react2.default.PropTypes.any
};

var defaultProps = {
  changeOnKeyDown: true
};

var TextFieldComponent = function (_React$Component) {
  _inherits(TextFieldComponent, _React$Component);

  function TextFieldComponent(props) {
    _classCallCheck(this, TextFieldComponent);

    var _this = _possibleConstructorReturn(this, (TextFieldComponent.__proto__ || Object.getPrototypeOf(TextFieldComponent)).call(this, props));

    _this.type = props.type || 'text';
    _this.state = { value: props.value };
    return _this;
  }

  _createClass(TextFieldComponent, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({ value: nextProps.value });
    }
  }, {
    key: 'onKeyDown',
    value: function onKeyDown(event) {
      if (event.keyCode === 13) {
        this.props.onChange(this.state.value);
      }
    }
  }, {
    key: 'onChange',
    value: function onChange(event) {
      this.setState({ value: event.target.value });
      if (this.props.changeOnKeyDown) {
        this.props.onChange(event.target.value);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var fieldType = this.props.fieldType || this.type;
      return _react2.default.createElement(
        _reactBootstrap.FormGroup,
        {
          validationState: this.props.errorMessage ? 'error' : undefined
        },
        this.props.label ? _react2.default.createElement(
          _reactBootstrap.ControlLabel,
          null,
          this.props.label
        ) : null,
        _react2.default.createElement(_reactBootstrap.FormControl, _extends({
          ref: 'input',
          value: this.state.value || '',
          type: fieldType,
          placeholder: this.props.placeholder || this.props.passProps.placeholder,
          disabled: this.props.disabled,
          onChange: this.onChange.bind(this),
          onKeyDown: this.onKeyDown.bind(this),
          onBlur: function onBlur() {
            return _this2.props.onChange(_this2.state.value);
          },
          componentClass: fieldType === 'textarea' ? 'textarea' : 'input'
        }, this.props.passProps)),
        this.props.errorMessage && _react2.default.createElement(
          _reactBootstrap.HelpBlock,
          null,
          this.props.errorMessage
        )
      );
    }
  }]);

  return TextFieldComponent;
}(_react2.default.Component);

exports.default = TextFieldComponent;


TextFieldComponent.propTypes = propTypes;
TextFieldComponent.defaultProps = defaultProps;

// textarea

var TextareaFieldComponent = function (_TextFieldComponent) {
  _inherits(TextareaFieldComponent, _TextFieldComponent);

  function TextareaFieldComponent(props) {
    _classCallCheck(this, TextareaFieldComponent);

    var _this3 = _possibleConstructorReturn(this, (TextareaFieldComponent.__proto__ || Object.getPrototypeOf(TextareaFieldComponent)).call(this, props));

    _this3.type = 'textarea';
    return _this3;
  }

  return TextareaFieldComponent;
}(TextFieldComponent);

// number


var NumberFieldComponent = function (_TextFieldComponent2) {
  _inherits(NumberFieldComponent, _TextFieldComponent2);

  function NumberFieldComponent(props) {
    _classCallCheck(this, NumberFieldComponent);

    var _this4 = _possibleConstructorReturn(this, (NumberFieldComponent.__proto__ || Object.getPrototypeOf(NumberFieldComponent)).call(this, props));

    _this4.type = 'number';
    return _this4;
  }

  _createClass(NumberFieldComponent, [{
    key: 'onKeyDown',
    value: function onKeyDown(event) {
      if (event.keyCode === 13) {
        this.props.onChange(parseInt(this.state.value));
      }
    }
  }, {
    key: 'onChange',
    value: function onChange(event) {
      this.setState({ value: event.target.value });
      if (this.props.changeOnKeyDown) {
        this.props.onChange(parseInt(event.target.value));
      }
    }
  }]);

  return NumberFieldComponent;
}(TextFieldComponent);

// date


var DateFieldComponent = function (_TextFieldComponent3) {
  _inherits(DateFieldComponent, _TextFieldComponent3);

  function DateFieldComponent(props) {
    _classCallCheck(this, DateFieldComponent);

    var _this5 = _possibleConstructorReturn(this, (DateFieldComponent.__proto__ || Object.getPrototypeOf(DateFieldComponent)).call(this, props));

    _this5.type = 'date';
    return _this5;
  }

  return DateFieldComponent;
}(TextFieldComponent);

// email


var EmailFieldComponent = function (_TextFieldComponent4) {
  _inherits(EmailFieldComponent, _TextFieldComponent4);

  function EmailFieldComponent(props) {
    _classCallCheck(this, EmailFieldComponent);

    var _this6 = _possibleConstructorReturn(this, (EmailFieldComponent.__proto__ || Object.getPrototypeOf(EmailFieldComponent)).call(this, props));

    _this6.type = 'email';
    return _this6;
  }

  return EmailFieldComponent;
}(TextFieldComponent);

// password


var PasswordFieldComponent = function (_TextFieldComponent5) {
  _inherits(PasswordFieldComponent, _TextFieldComponent5);

  function PasswordFieldComponent(props) {
    _classCallCheck(this, PasswordFieldComponent);

    var _this7 = _possibleConstructorReturn(this, (PasswordFieldComponent.__proto__ || Object.getPrototypeOf(PasswordFieldComponent)).call(this, props));

    _this7.type = 'password';
    return _this7;
  }

  return PasswordFieldComponent;
}(TextFieldComponent);

// color


var ColorFieldComponent = function (_TextFieldComponent6) {
  _inherits(ColorFieldComponent, _TextFieldComponent6);

  function ColorFieldComponent(props) {
    _classCallCheck(this, ColorFieldComponent);

    var _this8 = _possibleConstructorReturn(this, (ColorFieldComponent.__proto__ || Object.getPrototypeOf(ColorFieldComponent)).call(this, props));

    _this8.type = 'color';
    return _this8;
  }

  return ColorFieldComponent;
}(TextFieldComponent);

exports.TextField = TextFieldComponent;
exports.TextareaField = TextareaFieldComponent;
exports.NumberField = NumberFieldComponent;
exports.DateField = DateFieldComponent;
exports.EmailField = EmailFieldComponent;
exports.PasswordField = PasswordFieldComponent;
exports.ColorField = ColorFieldComponent;